<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.happy.video.mapper.SkinQuestionMapper" >
  <resultMap id="BaseResultMap" type="com.happy.video.pojo.SkinQuestion" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="skinId" property="skinid" jdbcType="INTEGER" />
    <result column="question" property="question" jdbcType="VARCHAR" />
    <result column="options" property="options" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="SMALLINT" />
    <result column="popUpSec" property="popupsec" jdbcType="INTEGER" />
    <result column="x" property="x" jdbcType="DOUBLE" />
    <result column="y" property="y" jdbcType="DOUBLE" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, skinId, question, options, answer, popUpSec, x, y, createTime, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.happy.video.pojo.SkinQuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from skin_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from skin_question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from skin_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.happy.video.pojo.SkinQuestionExample" >
    delete from skin_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.happy.video.pojo.SkinQuestion" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into skin_question (skinId, question, options, 
      answer, popUpSec, x, 
      y, createTime, updateTime
      )
    values (#{skinid,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR}, #{options,jdbcType=VARCHAR}, 
      #{answer,jdbcType=SMALLINT}, #{popupsec,jdbcType=INTEGER}, #{x,jdbcType=DOUBLE}, 
      #{y,jdbcType=DOUBLE}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.happy.video.pojo.SkinQuestion" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into skin_question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="skinid != null" >
        skinId,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="options != null" >
        options,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="popupsec != null" >
        popUpSec,
      </if>
      <if test="x != null" >
        x,
      </if>
      <if test="y != null" >
        y,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="skinid != null" >
        #{skinid,jdbcType=INTEGER},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="options != null" >
        #{options,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=SMALLINT},
      </if>
      <if test="popupsec != null" >
        #{popupsec,jdbcType=INTEGER},
      </if>
      <if test="x != null" >
        #{x,jdbcType=DOUBLE},
      </if>
      <if test="y != null" >
        #{y,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.happy.video.pojo.SkinQuestionExample" resultType="java.lang.Integer" >
    select count(*) from skin_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update skin_question
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.skinid != null" >
        skinId = #{record.skinid,jdbcType=INTEGER},
      </if>
      <if test="record.question != null" >
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.options != null" >
        options = #{record.options,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=SMALLINT},
      </if>
      <if test="record.popupsec != null" >
        popUpSec = #{record.popupsec,jdbcType=INTEGER},
      </if>
      <if test="record.x != null" >
        x = #{record.x,jdbcType=DOUBLE},
      </if>
      <if test="record.y != null" >
        y = #{record.y,jdbcType=DOUBLE},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update skin_question
    set id = #{record.id,jdbcType=INTEGER},
      skinId = #{record.skinid,jdbcType=INTEGER},
      question = #{record.question,jdbcType=VARCHAR},
      options = #{record.options,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=SMALLINT},
      popUpSec = #{record.popupsec,jdbcType=INTEGER},
      x = #{record.x,jdbcType=DOUBLE},
      y = #{record.y,jdbcType=DOUBLE},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.happy.video.pojo.SkinQuestion" >
    update skin_question
    <set >
      <if test="skinid != null" >
        skinId = #{skinid,jdbcType=INTEGER},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="options != null" >
        options = #{options,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=SMALLINT},
      </if>
      <if test="popupsec != null" >
        popUpSec = #{popupsec,jdbcType=INTEGER},
      </if>
      <if test="x != null" >
        x = #{x,jdbcType=DOUBLE},
      </if>
      <if test="y != null" >
        y = #{y,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.happy.video.pojo.SkinQuestion" >
    update skin_question
    set skinId = #{skinid,jdbcType=INTEGER},
      question = #{question,jdbcType=VARCHAR},
      options = #{options,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=SMALLINT},
      popUpSec = #{popupsec,jdbcType=INTEGER},
      x = #{x,jdbcType=DOUBLE},
      y = #{y,jdbcType=DOUBLE},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>